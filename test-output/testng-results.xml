<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="6" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-14T15:26:20 IST" name="Default suite" finished-at="2022-12-14T15:28:15 IST" duration-ms="114458">
    <groups>
    </groups>
    <test started-at="2022-12-14T15:26:20 IST" name="Default test" finished-at="2022-12-14T15:28:15 IST" duration-ms="114458">
      <class name="regression.InventoryCategoryPageeTestt">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:26:20 IST" name="beforeSuite" finished-at="2022-12-14T15:26:20 IST" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClassOfA()[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:26:20 IST" name="beforeClassOfA" finished-at="2022-12-14T15:27:27 IST" duration-ms="66873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassOfA -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:27 IST" name="beforeMethod" finished-at="2022-12-14T15:27:27 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyNewCategoryCanBeAdded() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNewCategoryCanBeAdded()[pri:1, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:27 IST" name="verifyNewCategoryCanBeAdded" finished-at="2022-12-14T15:27:36 IST" duration-ms="8564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewCategoryCanBeAdded -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:36 IST" name="afterMethod" finished-at="2022-12-14T15:27:36 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewCategoryCanBeAdded status=SUCCESS method=InventoryCategoryPageeTestt.verifyNewCategoryCanBeAdded()[pri:1, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:36 IST" name="beforeMethod" finished-at="2022-12-14T15:27:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyAddedCategoryDisplayedMessageSuccesFullyOrNot()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddedCategoryDisplayedMessageSuccesFullyOrNot()[pri:2, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:36 IST" name="verifyAddedCategoryDisplayedMessageSuccesFullyOrNot" finished-at="2022-12-14T15:27:36 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddedCategoryDisplayedMessageSuccesFullyOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:36 IST" name="afterMethod" finished-at="2022-12-14T15:27:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddedCategoryDisplayedMessageSuccesFullyOrNot status=SUCCESS method=InventoryCategoryPageeTestt.verifyAddedCategoryDisplayedMessageSuccesFullyOrNot()[pri:2, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:36 IST" name="beforeMethod" finished-at="2022-12-14T15:27:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyCountCanIncressByOneWhenCategoryAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCountCanIncressByOneWhenCategoryAdded()[pri:3, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:36 IST" name="verifyCountCanIncressByOneWhenCategoryAdded" finished-at="2022-12-14T15:27:41 IST" duration-ms="5075" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
record Count is not  Increased by one expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
record Count is not  Increased by one expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at regression.InventoryCategoryPageeTestt.verifyCountCanIncressByOneWhenCategoryAdded(InventoryCategoryPageeTestt.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCountCanIncressByOneWhenCategoryAdded -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:41 IST" name="afterMethod" finished-at="2022-12-14T15:27:41 IST" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCountCanIncressByOneWhenCategoryAdded status=FAILURE method=InventoryCategoryPageeTestt.verifyCountCanIncressByOneWhenCategoryAdded()[pri:3, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:41 IST" name="beforeMethod" finished-at="2022-12-14T15:27:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyUserCanEditExistingCategory() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanEditExistingCategory()[pri:4, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:41 IST" name="verifyUserCanEditExistingCategory" finished-at="2022-12-14T15:27:47 IST" duration-ms="5374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanEditExistingCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:47 IST" name="afterMethod" finished-at="2022-12-14T15:27:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanEditExistingCategory status=SUCCESS method=InventoryCategoryPageeTestt.verifyUserCanEditExistingCategory()[pri:4, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:47 IST" name="beforeMethod" finished-at="2022-12-14T15:27:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyUpdatedSuccessMessgaeIsDisplyed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUpdatedSuccessMessgaeIsDisplyed()[pri:5, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:47 IST" name="verifyUpdatedSuccessMessgaeIsDisplyed" finished-at="2022-12-14T15:27:47 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdatedSuccessMessgaeIsDisplyed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:47 IST" name="afterMethod" finished-at="2022-12-14T15:27:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdatedSuccessMessgaeIsDisplyed status=SUCCESS method=InventoryCategoryPageeTestt.verifyUpdatedSuccessMessgaeIsDisplyed()[pri:5, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:47 IST" name="beforeMethod" finished-at="2022-12-14T15:27:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyCountIsNotChangedAfterUpdatingCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCountIsNotChangedAfterUpdatingCategory()[pri:6, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:47 IST" name="verifyCountIsNotChangedAfterUpdatingCategory" finished-at="2022-12-14T15:27:52 IST" duration-ms="5060" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
count of record get changed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
count of record get changed expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at regression.InventoryCategoryPageeTestt.verifyCountIsNotChangedAfterUpdatingCategory(InventoryCategoryPageeTestt.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCountIsNotChangedAfterUpdatingCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:52 IST" name="afterMethod" finished-at="2022-12-14T15:27:52 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCountIsNotChangedAfterUpdatingCategory status=FAILURE method=InventoryCategoryPageeTestt.verifyCountIsNotChangedAfterUpdatingCategory()[pri:6, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:52 IST" name="beforeMethod" finished-at="2022-12-14T15:27:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyExistingCategoryDeleted() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyExistingCategoryDeleted()[pri:7, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:27:52 IST" name="verifyExistingCategoryDeleted" finished-at="2022-12-14T15:28:09 IST" duration-ms="16527" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[contains(@class,'delete')]"}
  (Session info: chrome=108.0.5359.99)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-LM8977J', ip: '192.168.197.213', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.99, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:61053}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 35fc6ecc0d2e40ad0df58e989db1eee8
*** Element info: {Using=xpath, value=//button[contains(@class,'delete')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[contains(@class,'delete')]"}
  (Session info: chrome=108.0.5359.99)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-LM8977J', ip: '192.168.197.213', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.99, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:61053}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 35fc6ecc0d2e40ad0df58e989db1eee8
*** Element info: {Using=xpath, value=//button[contains(@class,'delete')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.uiFramework.KTCTC.Pages.InventoryCategoryPagee.deletingExistingCategoryInCategorypage(InventoryCategoryPagee.java:150)
at regression.InventoryCategoryPageeTestt.verifyExistingCategoryDeleted(InventoryCategoryPageeTestt.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExistingCategoryDeleted -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:09 IST" name="afterMethod" finished-at="2022-12-14T15:28:09 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyExistingCategoryDeleted status=FAILURE method=InventoryCategoryPageeTestt.verifyExistingCategoryDeleted()[pri:7, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:09 IST" name="beforeMethod" finished-at="2022-12-14T15:28:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.verifyDeletedMessageSucessIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeletedMessageSucessIsDisplayed()[pri:8, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:09 IST" name="verifyDeletedMessageSucessIsDisplayed" finished-at="2022-12-14T15:28:09 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeletedMessageSucessIsDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:09 IST" name="afterMethod" finished-at="2022-12-14T15:28:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeletedMessageSucessIsDisplayed status=SUCCESS method=InventoryCategoryPageeTestt.verifyDeletedMessageSucessIsDisplayed()[pri:8, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyCountReducedByOneAfterCategoryDeleted()[pri:9, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:09 IST" name="VerifyCountReducedByOneAfterCategoryDeleted" finished-at="2022-12-14T15:28:14 IST" duration-ms="5050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCountReducedByOneAfterCategoryDeleted -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:09 IST" name="beforeMethod" finished-at="2022-12-14T15:28:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryPageeTestt.VerifyCountReducedByOneAfterCategoryDeleted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:14 IST" name="afterMethod" finished-at="2022-12-14T15:28:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyCountReducedByOneAfterCategoryDeleted status=SUCCESS method=InventoryCategoryPageeTestt.VerifyCountReducedByOneAfterCategoryDeleted()[pri:9, instance:regression.InventoryCategoryPageeTestt@505fc5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:14 IST" name="afterClass" finished-at="2022-12-14T15:28:15 IST" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuiteMethod()[pri:0, instance:regression.InventoryCategoryPageeTestt@505fc5a4]" started-at="2022-12-14T15:28:15 IST" name="afterSuiteMethod" finished-at="2022-12-14T15:28:16 IST" duration-ms="1285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteMethod -->
      </class> <!-- regression.InventoryCategoryPageeTestt -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
